{"version":3,"sources":["components/posts.js","components/postForm.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","useState","posts","setPosts","useEffect","getPosts","a","fetch","resp","json","postsResp","className","to","map","post","Card","variant","sx","minWidth","CardContent","Typography","component","title","mb","color","username","content","PostForm","props","state","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","requestOptions","method","headers","body","JSON","stringify","status","alert","id","onSubmit","TextField","label","onChange","TextareaAutosize","minRows","placeholder","style","width","Button","onClick","Component","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fff8c21.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport {Card, CardContent, Typography, Icon, IconButton } from \"@mui/material\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n\n      const resp = await fetch(\n        \"https://cloudflare-general-assignment.dhara30a.workers.dev/posts\",\n      );\n      // console.log(resp)\n      const postsResp = await resp.json();\n      // console.log(postsResp)\n      setPosts(postsResp);\n      // console.log(posts)\n    };\n\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"allPost\">\n      <div>\n        <h2>Posts</h2>\n        <Link to=\"/newpost\" className=\"btn btn-primary\">Add new post</Link>\n      </div>\n      \n      {posts.map((post) => (\n        <div className=\"post\">\n          <Card variant=\"outlined\" sx={{ minWidth: 275 }}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"div\">{post.title}</Typography>\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                by {post.username}\n              </Typography>\n              <Typography variant=\"body2\">\n              {post.content}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      ))}\n      \n    </div>\n  );\n};\n\nexport default Posts;","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport TextField from '@mui/material/TextField';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Button from '@mui/material/Button';\n\nclass PostForm extends Component{\n\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {};\n\n\t    this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t}\n\n\tasync handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\t// console.log(this.state);\n\n\t    const requestOptions = {\n\t        method: 'POST',\n\t        headers: { 'Content-Type': 'application/json' },\n\t        body: JSON.stringify(this.state)\n    \t};\n\n\t    const resp = await fetch('https://cloudflare-general-assignment.dhara30a.workers.dev/posts', requestOptions);\n\n\t    if (resp.status === 200){\n\t    \tthis.setState({})\n        \talert('New Post Added Successfully');\n\t    } else{\n\t\t\talert('An Error occured!!! Please try again.');    \t\n\t    }\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"/\">Go Back</Link>\n\t\t\t\t</div>\n\n\t\t\t<div className=\"newPost\">\n\t\t\t\t<h2>Add new Post</h2>\n\t\t\t\t<form id=\"add-post\" onSubmit={this.onSubmit}>\n\t\t\t    <div>\n\t\t\t    \t<TextField name=\"title\" id=\"standard-basic\" label=\"Title\" variant=\"standard\" value={this.state.value} onChange={this.handleChange} />\n\t\t\t    </div>\n\t\t\t\t<br/>\n\t\t\t    <div>\n\t\t\t    \t<TextField name=\"username\" id=\"standard-basic\" label=\"Username\" variant=\"standard\" value={this.state.value} onChange={this.handleChange} />\n\t\t\t    </div>\n\t\t\t\t<br/>\n\t\t\t    <div>\n\t\t\t    \t<label>Content:</label><br/>\n\t\t\t\t\t<TextareaAutosize\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tvalue={this.state.value} \n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"minimum height\"\n\t\t\t\t\t\t\tminRows={10}\n\t\t\t\t\t\t\tplaceholder=\"Enter post body\"\n\t\t\t\t\t\t\tstyle={{ width: 400 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\n\t\t\t    </div>\n\t\t\t\t<br/>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"contained\" onClick={this.handleSubmit}>Submit</Button>\n\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default PostForm","import { Router } from \"@reach/router\";\n// import { Link } from \"@reach/router\";\n\nimport Posts from './components/posts'\nimport PostForm from './components/postForm'\nimport './App.css'\n\nfunction App() {\n  return (\n    <Router>\n      <Posts path=\"/\" />\n      <PostForm path=\"/newpost\" />\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}